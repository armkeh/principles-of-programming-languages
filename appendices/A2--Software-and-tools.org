#+Title: Software and tools
#+Author: Mark Armstrong
#+Description: Documentation on required and recommended software/tools
#+SETUPFILE: ../org-html-themes/setup/theme-readtheorg-local.setup

* Introduction
:PROPERTIES:
:CUSTOM_ID: Introduction
:END:

This document discusses the software and tools needed
for CS3mi3, Principles of Programming Languages, for the fall 2020 session.

** *IMPORTANT*: Your responsibilities
:PROPERTIES:
:CUSTOM_ID: *IMPORTANT*:-Your-responsibilities
:END:

#+begin_center
It is not the responsibility of the instructor or the teaching assistants
to install the required software and tools on your system.

We will provide docker images for testing submissions, along with
basic usage instructions.
Installing and learning the basics of Docker is your own responsibility.

We recommend installation of the programming environments and tools
locally on your own system for your convenience
while working on the assignments.
This setup is your own responsibility.
#+end_center

* Docker
:PROPERTIES:
:CUSTOM_ID: Docker
:END:

We will use Docker to ensure a common testing environment
for all students and staff.

Docker images will be distributed which setup the required
language tools for each assignment and include some sanity-checking
unit tests for your code.

Similar images with more complete unit tests will make up part
of the marking process of assignments.

** TODO Getting started with Docker
:PROPERTIES:
:CUSTOM_ID: Getting-started-with-Docker
:END:

* Editors
:PROPERTIES:
:CUSTOM_ID: Editors
:END:

Any text editor should be adequate for use in this course.
I recommend against “full-fledged IDEs”; it is likely
some languages we use will not be supported by any choice of IDE.

I do recommend [[https://www.gnu.org/software/emacs/][Emacs]] as a text editor,
though warn that its use involves a steep learning curve
and likely a long configuration time
—most likely an unending configuration time.
The [[https://www.spacemacs.org/][Spacemacs]] and [[https://github.com/hlissner/doom-emacs][Doom (Emacs)]] configurations alleviate at least some
of the setup time; they are preconfigured with many commonly used features
and support for many programming languages.

[[https://atom.io/][Atom]], [[https://code.visualstudio.com/][VS Code]] and
[[https://www.sublimetext.com/][Sublime Text]] are
other extensible text editors, any of which is also
an excellent choice.

* Version control
:PROPERTIES:
:CUSTOM_ID: Version-control
:END:

We make frequent use of Git throughout this course for
version control.

We will make use of the
[[https://github.com/armkeh/principles-of-programming-languages][course GitHub repository]]
and its
[[https://armkeh.github.io/principles-of-programming-languages/][github.io website]]
for course content distribution.

A repository on the
[[https://gitlab.cas.mcmaster.ca/][CAS departmental Gitlab server]]
will be created for each student for course work submission,
as your accounts there are tied to your macid.

* Online communication
:PROPERTIES:
:CUSTOM_ID: Online-communication
:END:

Online communications,
*including for this term all lectures and tutorials*,
will be conducted using
[[https://teams.microsoft.com][Microsoft Teams]].

By the beginning of the course, you should have access to
a Team for the course when logging in using your McMaster email
and MacID password.

* Programming languages and their implementations
:PROPERTIES:
:CUSTOM_ID: Language-implementations
:END:

We plan to use four programming languages
for homework and assignments throughout the course.
Each language will require an implementation to be installed.

This section provides information on those implementations,
as well as some additional resources for each language.

** Scala                                       :functional:objectoriented:
:PROPERTIES:
:CUSTOM_ID: Scala
:END:

A Java-descended, /pure/ object oriented language
with full functional programming support on the JVM.

- The Scala [[https://scala-lang.org/][homepage]].
- [[https://www.handsonscala.com/index.html][Hands-on Scala Programming]],
  a very recent book with the first few chapters available freely online.

** Prolog                                      :logical:
:PROPERTIES:
:CUSTOM_ID: Prolog
:END:

The prevalent logical programming language.
Program by /describing the problem/, rather than providing an algorithms. 

** Ruby                                        :objectoriented:scripting:
:PROPERTIES:
:CUSTOM_ID: Ruby
:END:

A /nearly pure/ object-oriented /scripting/ language
featuring extremely flexible syntax.

** Clojure                                     :functional:LISP:
:PROPERTIES:
:CUSTOM_ID: Clojure
:END:

A Lisp (LISt Programming) functional language on the JVM.
