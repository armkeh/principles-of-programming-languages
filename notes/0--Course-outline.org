#+Title: Computer Science 3MI3 - Principles of Programming Languages
#+Subtitle: 2020 Course Outline
#+Author: Mark Armstrong
#+Date: August 2nd, 2020
#+Description: The course outline for the 2020 class of 3mi3.
#+SETUPFILE: ../org-html-themes/setup/theme-readtheorg-local.setup

* TL;DR (Too Long, Didn't Read)
:PROPERTIES:
:CUSTOM_ID: TL;DR
:END:

At the very least, please review these sections of the outline.
- [[Course staff][Course staff]]
- [[Communicating with course staff][Communicating with course staff]]
- [[Your responsibilities regarding course administration tools][Your responsibilities regarding course administration tools]]
- [[Asking well-posed questions][Asking well-posed questions]]
- [[Grading][Grading]],
  - [[Missed work][Missed work]],
  - [[Homework due dates][Homework due dates]] and
  - [[Assignment due dates][Assignment due dates]].

* The purpose of an outline
:PROPERTIES:
:CUSTOM_ID: The-purpose-of-an-outline
:END:

#+begin_quote
“A course outline sets the expectations for students
and what they can expect in terms of the course
experience they will receive,
the format in which the course will be delivered
and the knowledge and skills that can be gained.
The outline introduces the course and the instructor
and sets out the expectations of the instructor
so that students are aware of how they will learn,
what level of participation will be expected
and how they will be assessed.”
#+end_quote

* Course staff
:PROPERTIES:
:CUSTOM_ID: Course-staff
:END:

#+INCLUDE: "./1--Introduction-and-overview.org::*Instructor: Mark Armstrong"
#+INCLUDE: "./1--Introduction-and-overview.org::*Teaching assistant: Habib Ghaffari-Hadigheh"

* Schedule
:PROPERTIES:
:CUSTOM_ID: Schedule
:END:

+-------+------------+------+------------+-----+----------+-----+----------+
|       | Mon        | Tues | Wed        | Thu | Fri      | Sat | Sun      |
+-------+------------+------+------------+-----+----------+-----+----------+
|  9:30 |            |      | Tutorial 2 |     |          |     |          |
+-------+------------+------+------------+-----+----------+-----+----------+
| 10:30 |            |      |            |     |          |     |          |
+-------+------------+------+------------+-----+----------+-----+----------+
| 11:30 |  Lecture   |      | Lecture    |     |          |     |          |
+-------+------------+------+------------+-----+----------+-----+----------+
| 12:30 | Tutorial 1 |      |            |     |          |     |          |
+-------+------------+------+------------+-----+----------+-----+----------+
| 13:30 |            |      |            |     | Lecture  |     |          |
+-------+------------+------+------------+-----+----------+-----+----------+
|   EOD |            |      |            |     | Homework |     | Homework |
|       |            |      |            |     | released |     |   due    |
+-------+------------+------+------------+-----+----------+-----+----------+

** Lecture recordings
:PROPERTIES:
:CUSTOM_ID: Lecture-recordings
:END:

Lectures and tutorials will be made available as recordings
shortly after said lectures and tutorials,
via Microsoft Stream (or if Zoom is used, via Zoom).

** Homework due dates
:PROPERTIES:
:CUSTOM_ID: Homework-due-dates
:END:

This course will have weekly homeworks, as described in [[Grading][Grading]].

Homework will be released each Friday by end of day
and will be due the Sunday nine days later by end of day,
unless a delay is announced on the course homepage,
and except for the weekends surrounding the midterm recess
—there will be a single homework due
the Monday following the recess instead.

** Assignment due dates
:PROPERTIES:
:CUSTOM_ID: Assignment-due-dates
:END:

This course will have three assignments, as described in [[Grading][Grading]].

As of the beginning of the course,
the assignments are planned to be due on
- +October 7th+,
  - ammended September 27th; the new due date is October 21st
- +November 11th+,
  - ammended November 9th; the new due date is +November 25th+
  - ammended once more on November 25th; the final due date is November 29th
  and
- +December 16th+.
  - ammended November 19th; the new due date is December 18th.
  
Any changes to these dates will be announced on the course homepage.
Also see [[Accomodations for SAS and conflicts with other courses][Accomodations for SAS and conflicts with other courses]];
in particular, we will reevaluate the final assignment due date
once the exams schedule is released, based on the exam dates
of other third year computer science courses.

* Administration tools
:PROPERTIES:
:CUSTOM_ID: Administration-tools
:END:

** The tools
:PROPERTIES:
:CUSTOM_ID: The-tools
:END:

This course will be administered via a combination of
- a “team” on the CAS departmental Microsoft Teams,
  - —Zoom meetings may be used if there is a problem with Teams;
    any such change will be announced on the homepage—
- the course
  [[https://armkeh.github.io/principles-of-programming-languages/][homepage]],
- a [[https://github.com/armkeh/principles-of-programming-languages][Github repository]]
  of the course content, from which
  the homepage is hosted as a ~github.io~ website,
- a repository for each student on the
  [[https://gitlab.cas.mcmaster.ca][McMaster CAS GitLab server]], and
- communications via McMaster email addresses.

Specifically,
- Teams :: will be used for live lectures/tutorials,
  lecture/tutorial recordings,
  and preferred for discussions relevant to the whole
  (or at least many members of) the class,
  - *Zoom* :: may be used for live lectures/tutorials
    if there are problems with Teams,
- the homepage :: will be used for announcements
  and convenient access to notes and homework/assignments,
- the Github repository :: will be used to host the course homepage
  and content, and allow students to easily see version changes
  to content,
- the Gitlab repository for each student :: will be used
  for homework and assignment submissions and grade distribution, and
- McMaster email addresses :: will be used
  for private communications with students.

An Avenue to Learn course has been created for this course
for the sake of directing students to the course homepage
and entering homework/assignment deadlines in a calendar.
No course content will be uploaded to Avenue to Learn,
and attempts to communicate with staff on that platform
may go unnoticed and unanswered.

** Your responsibilities regarding course administration tools
:PROPERTIES:
:CUSTOM_ID: Your-responsibilities-regarding-course-administration-tools
:END:

*It is the student's responsibility*
- to ensure they have an account on
  the [[https://gitlab.cas.mcmaster.ca][McMaster CAS GitLab server]] and
  the [[https://teams.microsoft.com/l/team/19%3a1f2f25fdc5e243d285e2f92216e5b483%40thread.tacv2/conversations?groupId=a2e98537-757f-4791-b72f-2cf4d7459f28&tenantId=44376307-b429-42ad-8c25-28cd496f4772][CAS Microsoft Teams team]]
- to be aware of the information on the course's [[https://armkeh.github.io/principles-of-programming-languages/][homepage]] and
- to check the [[https://armkeh.github.io/principles-of-programming-languages/][homepage]], their course GitLab repository,
  the Microsoft Teams team for the course
  and their email regularly for announcements and changes.
It is not assumed that students follow the Github repo,
but it is a good practice to stay informed of any and all
changes to content.

* Communicating with course staff
:PROPERTIES:
:CUSTOM_ID: Communicating-with-course-staff
:END:

To communicate with course staff reliably, you should
choose the most appropriate means from the below.
- “Mention” the course staff member in a relevant channel on
  the Microsoft Teams team.
  - This is appropriate for questions which may interest many students.
- Private message the course staff member on Microsoft Teams.
  - This is appropriate for very quick questions.
- Email the course staff member using the email listed under [[Course staff][Course staff]].
  - This is appropriate for longer or more detailed questions.

Note that outside of class hours, course staff may not be available
for immediate replies to your communication.
Permit up to a business day for response before following up
on urgent issues, and up to two business days for non-urgent issues.

** Asking well-posed questions
:PROPERTIES:
:CUSTOM_ID: Asking-“smart”-questions
:END:

While there are “no stupid questions”, and course staff are happy
to help with any questions regarding course material,
it is expected that when students ask questions
they will take the time to ask well-posed questions
as described in these resources.
- [[https://cs.stackexchange.com/help/how-to-ask][The computer science StackOverflow guide]] to asking good questions.
- [[https://www.cs.cornell.edu/courses/cs3110/2017fa/thoughtful.html][Asking Technical Questions]] by Dr. Clarkson of Cornell University.
- [[http://www.catb.org/~esr/faqs/smart-questions.html][How to Ask Questions The Smart Way]] by Eric Steven Raymond and Rick Moen.

In summary, when asking questions, always take the time to
do your own research first, and describe this research to the staff.
- For questions regarding course administration,
  always check the homepage and the outline first,
  and include which sections you have checked in your question.
- For questions regarding tools, including installation and usage,
  always search online first, and list the resources consulted
  in your question.
- For questions regarding course material, always
  reference the portions of the notes you have checked
  for your answers.

Additionally, any time that code is being shared,
students are asked to share plain text or markup code snippets
(in the case of Microsoft Teams, using the code snippet formatting option)
rather than sharing screenshots.

Failure to follow these practices may result in
terse answers from course staff, such as
“Please check the course outline.” 

* Resources
:PROPERTIES:
:CUSTOM_ID: Resources
:END:

The course notes are intended to be self contained,
but the recommended texts and several of the available resources
are available free of charge,
so you are encouraged to investigate them.

The primary recommended (not required) text is
- Pierce 2002 – Types and Programming Languages
  - Available through the McMaster library on
    [[https://ebookcentral.proquest.com/lib/mcmu/detail.action?docID=3338823][ProQuest Ebook Central]].
    You may view the whole text online,
    download up to 65 pages per day as a PDF, or
    borrow the whole text using Adobe Digital Editions. 
  - Available for sale through the
    [[https://campusstore.mcmaster.ca/cgi-mcm/ws/txsub.pl?wsTERMG1=204&wsDEPTG1=COMPSCI&wsCOURSEG1=3MI3&wsSECTIONG1=DAY%20C01&crit_cnt=1][Campus Store]].

ACM Digital Library citation:
#+begin_quote
Benjamin C. Pierce. 2002.
Types and Programming Languages (1st. ed.).
The MIT Press.
#+end_quote

From its abstract:
#+begin_quote
A type system is a syntactic method for automatically checking the
absence of certain erroneous behaviors by classifying program phrases
according to the kinds of values they compute. The study of type systems
– and of programming languages from a type-theoretic perspective –
has important applications in software engineering, language design,
high-performance compilers, and security. This text provides a
comprehensive introduction both to type systems in computer science
and to the basic theory of programming languages. The approach is
pragmatic and operational; each new concept is motivated by programming
examples and the more theoretical sections are driven by the
needs of implementations
#+end_quote

** Additional textbooks
:PROPERTIES:
:CUSTOM_ID: Additional-textbooks
:END:

*** *“SICP”*; “The Wizard Book”
:PROPERTIES:
:CUSTOM_ID: *“SICP”*;-“The-Wizard-Book”
:END:

ACM Digital Library citation:
#+begin_quote
Harold Abelson and Gerald J. Sussman. 1996.
Structure and Interpretation of Computer Programs (2nd ed.).
MIT Press, Cambridge, MA, USA.
#+end_quote

From its abstract:
#+begin_quote
With an analytical and rigorous approach to problem solving
and programming techniques,this book is oriented toward engineering.
Structure and Interpretation of Computer Programs emphasizes
the central role played by different approaches
to dealing with time in computational models.
Its unique approach makes it appropriate for
an introduction to computer science courses,
as well as programming languages and program design.
#+end_quote

~html~ available through
[[https://mitpress.mit.edu/sites/default/files/sicp/index.html][the MIT press]]
and ~pdf~ available through
[[https://github.com/sarabander/sicp-pdf][GitHub]].
*** *“Van Roy & Haridi”*
:PROPERTIES:
:CUSTOM_ID: *“Van-Roy-&-Haridi”*
:END:

ACM Digital Library citation:
#+begin_quote
Peter Van Roy and Seif Haridi. 2004.
Concepts, Techniques, and Models of Computer Programming (1st ed.).
The MIT Press.
#+end_quote

From its abstract:
#+begin_quote
The book presents all major programming paradigms in a uniform framework
that shows their deep relationships and how and where
to use them together.
#+end_quote

~pdf~ available through
[[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.102.7366&rep=rep1&type=pdf][CiteSeer^{X}]].

*** *“Dowek”*
:PROPERTIES:
:CUSTOM_ID: *“Dowek”*
:END:

ACM Digital Library citation:
#+begin_quote
Gilles Dowek. 2009.
Principles of Programming Languages.
Springer Publishing Company, Incorporated.
#+end_quote

From its abstract:
#+begin_quote
This book is an introduction to the principles
around which these languages are organised:
imperative constructions, functional constructions,
reference, dynamic data types, objects and more.
#+end_quote

~pdf~ available through
[[https://discovery.mcmaster.ca/iii/encore/record/C__Rb1593967][the McMaster library]].

*** *“Sebesta”*
:PROPERTIES:
:CUSTOM_ID: *“Sebesta”*
:END:

ACM Digital Library citation:
#+begin_quote
Robert W. Sebesta. 2012.
Concepts of Programming Languages (10th ed.).
Pearson.
#+end_quote

An encyclopedic text on the construction of programming languages.

*** *“Fernández”*
:PROPERTIES:
:CUSTOM_ID: *“Fernández”*
:END:

ACM Digital Library citation:
#+begin_quote
M. Fernandez. 2004.
Programming Languages and Operational Semantics: An Introduction.
King's College Publications.
#+end_quote

An introductory text covering primarily operational semantics
of a simple imperative and a simple functional language.

~pdf~ available through
[[http://discovery.mcmaster.ca/iii/encore/record/C__Rb2200622][the McMaster library]].

* Course description
:PROPERTIES:
:CUSTOM_ID: Course-description
:END:

#+INCLUDE: "./1--Introduction-and-overview.org::*Purpose and goals of this course" :only-contents t

* Grading
:PROPERTIES:
:CUSTOM_ID: Grading
:END:

The graded work for this course consists of
- weekly short homeworks, which may include
  - short written answers and
  - relatively small programming tasks.
- three larger programming assignments
  - involving several “medium size” programming tasks each.

*There will not be midterm or final examinations for this course.*

Portions of your grade for both the homeworks and the assignments
may be calculated by automated unit tests.
A limited sample of such unit tests will be provided
before the deadline, at least for the assignments.

Each student's final grade will be calculated using the scheme
+--------------+---------------+
|   Homework   |      25%      |
+--------------+---------------+
| Assignment 1 |      20%      |
+--------------+---------------+
| Assignment 2 |      25%      |
+--------------+---------------+
| Assignment 3 |      30%      |
+--------------+---------------+

** Accomodations for SAS and conflicts with other courses
:PROPERTIES:
:CUSTOM_ID: Accomodations-for-SAS-and-conflicts-with-other-courses
:END:

If you require accommodation regarding course work deadlines,
either with regards to SAS or with regards to course work
in other courses, please contact Mark
no later than *two weeks* before
the deadline of the relevant course work deadline.

** Missed work
:PROPERTIES:
:CUSTOM_ID: Missed-work
:END:

A student who would like to receive accommodation
for missed academic work due to an absence
needs to complete a McMaster Student Absence Form (MSAF) on-line at
http://www.mcmaster.ca/msaf/.
When the MSAF tool asks you for the party
who should receive your request for accommodation,
enter ~armstmp@mcmaster.ca~.
MSAFs sent to any other email address will be ignored.

*Students are reminded that they are expected to contact*
*the instructor after filling out an MSAF*.

For this course, the accomodation for any missed work will be
a 4 day extension.
#+begin_center
*The missed work must still be submitted*.
#+end_center

* Approved advisory statements
:PROPERTIES:
:CUSTOM_ID: Approved-statements
:END:

[[file:./media/outline-advisory-statements.pdf][These two pages]] cover topics and policies
related to undergraduate course management.
Please review them.

@@latex:They are also attached to this document immediately following this page.@@

#+LaTeX_header: \usepackage{pdfpages}
@@latex:\includepdf[pages=-,width=\pagewidth]{media/outline-advisory-statements.pdf}@@

# This would trigger a download and open with an external viewer
# on Firefox.
# @@html:<iframe src="media/outline-advisory-statements.pdf" style="width: 100%; height: 75vh"></iframe>@@
